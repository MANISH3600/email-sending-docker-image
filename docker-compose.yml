version: "3.13"

services:

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  db:
    image: postgres
    container_name: postgres_db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - NAME=${DB_NAME}
      - USER=${DB_USER}
      - PASSWORD=${DB_PASSWORD}
      - HOST=${DB_HOST}
      - PORT=${DB_PORT}

  app:
    build: .
    container_name: django_app
    image: app:django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/django
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  celery:
    build:
      context: .
    container_name: celery
    command: celery -A myproject worker --loglevel=info 
    volumes:
      - .:/django
    depends_on:
      - db
      - redis
      - app
    environment:
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
